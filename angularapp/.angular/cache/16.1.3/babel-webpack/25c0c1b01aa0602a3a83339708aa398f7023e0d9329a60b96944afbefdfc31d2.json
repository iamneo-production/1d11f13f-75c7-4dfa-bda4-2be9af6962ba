{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"https://8080-ecafcddffdddcefbeacfaceadeaeaadbdbabf.project.examly.io/students\";\n  }\n  getstudentslist() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createStudent(student) {\n    return this.httpClient.post(`${this.baseURL}`, student);\n  }\n  getStudentById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateStudent(id, student) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, student);\n  }\n  deleteStudent(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\nStudentService.ɵfac = function StudentService_Factory(t) {\n  return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentService,\n  factory: StudentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["StudentService","constructor","httpClient","baseURL","getstudentslist","get","createStudent","student","post","getStudentById","id","updateStudent","put","deleteStudent","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/angularapp/src/app/service/student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Student } from '../class/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n  private baseURL = \"https://8080-ecafcddffdddcefbeacfaceadeaeaadbdbabf.project.examly.io/students\";\n  constructor(private httpClient: HttpClient) { }\n\n  getstudentslist(): Observable<Student[]> {\n    return this.httpClient.get<Student[]>(`${this.baseURL}`);\n  }\n\n  createStudent(student: Student): Observable<Object> {\n    return this.httpClient.post(`${this.baseURL}`, student);\n  }\n\n  getStudentById(id: number): Observable<Student> {\n    return this.httpClient.get<Student>(`${this.baseURL}/${id}`);\n  }\n\n  updateStudent(id: number, student: Student): Observable<Object> {\n    return this.httpClient.put(`${this.baseURL}/${id}`, student);\n  }\n  deleteStudent(id: number): Observable<Object> {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAG,+EAA+E;EACnD;EAE9CC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC1D;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,OAAO,CAAC;EACzD;EAEAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EAEAC,aAAaA,CAACD,EAAU,EAAEH,OAAgB;IACxC,OAAO,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEH,OAAO,CAAC;EAC9D;EACAM,aAAaA,CAACH,EAAU;IACtB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;AArBWV,cAAc,C;mBAAdA,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdlB,cAAc,C;SAAdA,cAAc;EAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}